/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package networking;

import java.awt.*;
import java.io.*;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.*;

/**
 *
 * @author peanu
 */
//join is a thread
//TODO: thread for reading stuff from chats user is not in
//paths for server input
//all input separated by spaces
public class Graphic extends javax.swing.JFrame {

    int port = 8000;
    //static String host = "100.20.240.236";
    static String host = "localhost";
    //100.20.240.236
    DataInputStream in;
    DataOutputStream out;
    Socket socket;
    DefaultListModel model;
    ArrayList<ArrayList<String>> chatN;
    ArrayList<String> notif;

    public Graphic() {
        initComponents();
        try {
            socket = new Socket(host, port);
            out = new DataOutputStream(socket.getOutputStream());
            in = new DataInputStream(socket.getInputStream());
            chatN = new ArrayList<>();
            model = new DefaultListModel();
            notif = new ArrayList<>();
            chatJList.setModel(model);
            Login login = new Login(this, true, socket);
            login.setVisible(true);
            this.setVisible(true);
            String chatsCheck = in.readUTF();
            if (!chatsCheck.equals("No chats")) {
                String[] chats = chatsCheck.split(":");
                for (int i = 0; i < chats.length; i++) {
                    String[] chatSplit = chats[i].split("\n");
                    model.addElement(chatSplit[0]);
                    ArrayList<String> chatM = new ArrayList<>();
                    for (int j = 0; j < chatSplit.length; j++) {
                        chatM.add(chatSplit[j]);
                    }
                    chatN.add(chatM);
                }
                chatJList.setSelectedIndex(0);
                //puts in first chat messages 
                for (int i = 0; i < chatN.get(0).size(); i++) {
                    chatJTextArea.append(chatN.get(0).get(i));
                }
            }
            this.setLocationRelativeTo(null);
            Read r = new Read(socket);
            Thread t = new Thread(r);
            t.start();
        } catch (IOException e) {
            System.out.println("oopsies");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sendJButton = new javax.swing.JButton();
        joinJButton = new javax.swing.JButton();
        newChatJTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        chatJTextArea = new javax.swing.JTextArea();
        textJTextField = new javax.swing.JTextField();
        joinStatusjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatJList = new javax.swing.JList<>();
        createJButton = new javax.swing.JButton();
        JMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sendJButton.setText("Send");
        sendJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendJButtonActionPerformed(evt);
            }
        });

        joinJButton.setText("Join");
        joinJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinJButtonActionPerformed(evt);
            }
        });

        chatJTextArea.setColumns(20);
        chatJTextArea.setRows(5);
        jScrollPane2.setViewportView(chatJTextArea);

        textJTextField.setToolTipText("");

        joinStatusjLabel.setForeground(java.awt.Color.red);

        chatJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                chatJListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(chatJList);

        createJButton.setText("Create");
        createJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createJButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        JMenuBar.add(jMenu1);

        jMenu2.setText("Help");

        aboutMenuItem.setText("About");
        jMenu2.add(aboutMenuItem);

        JMenuBar.add(jMenu2);

        setJMenuBar(JMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(joinStatusjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(joinJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(createJButton)))
                        .addGap(0, 19, Short.MAX_VALUE))
                    .addComponent(newChatJTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendJButton)
                        .addGap(0, 4, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newChatJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(joinStatusjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sendJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(joinJButton)
                        .addComponent(createJButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendJButtonActionPerformed
        // TODO add your handling code here:
        String text = "";
        try {
            out.writeInt(3);
            out.flush();
            text = textJTextField.getText();
            //TODO try to add timestamp and username
            out.writeUTF(chatJList.getSelectedValue() + " " + text);
            out.flush();
        } catch (IOException e) {
            System.out.println("sendJButton error");
        }
    }//GEN-LAST:event_sendJButtonActionPerformed

    private void joinJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinJButtonActionPerformed
        // TODO add your handling code here:
        try {
            out.writeInt(1);
            out.flush();
            out.writeUTF(newChatJTextField.getText());
            out.flush();
            System.out.println("sending to server");
        } catch (IOException e) {
            System.out.println("Client enterChat error");
        }
    }//GEN-LAST:event_joinJButtonActionPerformed

    private void createJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createJButtonActionPerformed
        // TODO add your handling code here:
        try {
            out.writeInt(2);
            out.flush();
            out.writeUTF(newChatJTextField.getText());
            out.flush();
            //TODO: add foolproofing
            model.addElement(newChatJTextField.getText());
            newChatJTextField.setText("");
        } catch (IOException e) {
            System.out.println("client create error");
        }
    }//GEN-LAST:event_createJButtonActionPerformed

    private void chatJListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_chatJListValueChanged
        // TODO add your handling code here:
        System.out.println(chatJList.getSelectedValue());
        chatJTextArea.setText("");
        for (int i = 0; i < chatN.size(); i++) {
            if (chatN.get(i).get(0).equals(chatJList.getSelectedValue())) {
                notif.remove(chatN.get(i).get(0));
                chatJList.setCellRenderer(new SelectedListCellRenderer(notif));
                for (int j = 1; j <= chatN.get(i).size(); j++) {
                    chatJTextArea.append(chatN.get(i).get(j));
                }
            }
        }
    }//GEN-LAST:event_chatJListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graphic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graphic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graphic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graphic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Graphic();
            }
        });
    }

    private class Read implements Runnable {

        DataInputStream in;
        Socket socket;
        DataOutputStream out;
        boolean running = true;
        Thread t;

        Read(Socket socket) {
            this.socket = socket;
            t = new Thread(this);
            t.start();
        }

        @Override
        public void run() {
            try {
                in = new DataInputStream(socket.getInputStream());
                do {
                    int option = in.readInt();
                    System.out.println(option + "yes");
                    switch (option) {
                        case 2:
                            join(in.readUTF());
                            break;
                        case 3:
                            addMessage(in.readUTF());
                            break;
                    }
                } while (running);
            } catch (IOException e) {
                System.out.println("Read run error");
            }
        }

        public void addMessage(String e) {
            //split because e has chat name
            String[] chat = e.split(" ", 2);
            String name = chat[0];
            //add to arraylist and display on text area
            for (int i = 0; i < chatN.size(); i++) {
                if (chatN.get(i).get(0).equals(name)) {
                    chatN.get(i).add(chat[1]);
                }
            }
            if (chatJList.getSelectedValue().equals(name)) {
                chatJTextArea.append(e);
            } else {
                notif.add(name);
                chatJList.setCellRenderer(new SelectedListCellRenderer(notif));
            }
        }

        public void join(String x) {
            //add new chat to the chat jlist and add new array list to chatN
            System.out.println(x + "hi");
            //display the texts
            if (x.startsWith("No")) {
                joinStatusjLabel.setText(x);
                return;
            } else {
                joinStatusjLabel.setText("");
                chatJTextArea.setText(x);
                String name = newChatJTextField.getText();
                model.addElement(name);
                newChatJTextField.setText("");
                String[] chat = x.split("\n");
                ArrayList<String> chatM = new ArrayList<>();
                for (int i = 0; i < chat.length; i++) {
                    chatM.add(chat[i]);
                }
                chatN.add(chatM);
            }
        }
    }

    private class SelectedListCellRenderer extends DefaultListCellRenderer {

        ArrayList<String> notif;

        public SelectedListCellRenderer(ArrayList<String> notif) {
            this.notif = notif;
        }

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            Component c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            if (notif.contains((String) value)) {
                c.setBackground(Color.darkGray);
            }
            return c;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar JMenuBar;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JList<String> chatJList;
    private javax.swing.JTextArea chatJTextArea;
    private javax.swing.JButton createJButton;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton joinJButton;
    private javax.swing.JLabel joinStatusjLabel;
    private javax.swing.JTextField newChatJTextField;
    private javax.swing.JButton sendJButton;
    private javax.swing.JTextField textJTextField;
    // End of variables declaration//GEN-END:variables
}
